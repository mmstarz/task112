{"version":3,"file":"static/js/6.7e3bd062.chunk.js","mappings":"0JA2BA,GAzBkBA,E,QAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,WAAY,CACVC,cAAe,SACfC,WAAY,aACZC,eAAgB,cAElBC,WAAY,CACVH,cAAe,MACfC,WAAY,aACZC,eAAgB,aAChB,oBAAqB,CACnBE,MAAO,QACPC,OAAQ,QACRC,UAAW,UACXC,QAAS,SAGbC,KAAM,CAAEC,IAAK,OACbC,OAAQ,CACNN,MAAO,QACPC,OAAQ,QACRC,UAAW,e,0GChBf,GAAeK,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,kHACD,U,UCRG,SAASC,EAAsBC,GACpC,OAAOC,EAAAA,EAAAA,GAAqB,YAAaD,IAErBE,E,OAAAA,GAAuB,YAAa,CAAC,OAAQ,eAAgB,WAAY,UAAW,SAAU,MAAO,aAA3H,ICFMC,EAAY,CAAC,MAAO,WAAY,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,WAyBhGC,GAAaC,EAAAA,EAAAA,IAAO,MAAO,CAC/BC,KAAM,YACNN,KAAM,OACNO,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAOC,EAAWE,SAAUF,EAAWG,cAAgBJ,EAAOI,gBAPpER,EAShB,gBACDtB,EADC,EACDA,MACA2B,EAFC,EAEDA,WAFC,OAGGI,EAAAA,EAAAA,GAAS,CACbC,SAAU,WACVvB,QAAS,OACTN,WAAY,SACZC,eAAgB,SAChB6B,WAAY,EACZ3B,MAAO,GACPC,OAAQ,GACR2B,WAAYlC,EAAMmC,WAAWD,WAC7BE,SAAUpC,EAAMmC,WAAWE,QAAQ,IACnCC,WAAY,EACZC,aAAc,MACdC,SAAU,SACVC,WAAY,QACY,YAAvBd,EAAWE,SAAyB,CACrCU,aAAcvC,EAAM0C,MAAMH,cACF,WAAvBZ,EAAWE,SAAwB,CACpCU,aAAc,GACbZ,EAAWG,cAAgB,CAC5Ba,MAAO3C,EAAM4C,QAAQC,WAAWC,QAChCC,gBAAwC,UAAvB/C,EAAM4C,QAAQI,KAAmBhD,EAAM4C,QAAQK,KAAK,KAAOjD,EAAM4C,QAAQK,KAAK,UAE3FC,GAAY5B,EAAAA,EAAAA,IAAO,MAAO,CAC9BC,KAAM,YACNN,KAAM,MACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAOyB,MAH7B7B,CAIf,CACDhB,MAAO,OACPC,OAAQ,OACR6C,UAAW,SAEX5C,UAAW,QAEXmC,MAAO,cAEPU,WAAY,MAERC,GAAiBhC,EAAAA,EAAAA,IAAOiC,EAAQ,CACpChC,KAAM,YACNN,KAAM,WACNO,kBAAmB,SAACC,EAAOC,GAAR,OAAmBA,EAAO8B,WAHxBlC,CAIpB,CACDhB,MAAO,MACPC,OAAQ,QAkDV,IAuIA,EAvI4BkD,EAAAA,YAAiB,SAAgBC,EAASC,GACpE,IAAMlC,GAAQmC,EAAAA,EAAAA,GAAc,CAC1BnC,MAAOiC,EACPnC,KAAM,cAINsC,EASEpC,EATFoC,IACUC,EAQRrC,EARFsC,SACAC,EAOEvC,EAPFuC,UAHF,EAUIvC,EANFwC,UAAAA,OAJF,MAIc,MAJd,EAKEC,EAKEzC,EALFyC,SACAC,EAIE1C,EAJF0C,MACAC,EAGE3C,EAHF2C,IACAC,EAEE5C,EAFF4C,OARF,EAUI5C,EADFI,QAAAA,OATF,MASY,WATZ,EAWMyC,GAAQC,EAAAA,EAAAA,GAA8B9C,EAAOL,GAE/C2C,EAAW,KAETS,EApER,YAKG,IAJDC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAN,EAEC,EAFDA,IACAC,EACC,EADDA,OAEA,EAA4BZ,EAAAA,UAAe,GAA3C,eAAOe,EAAP,KAAeG,EAAf,KAsCA,OArCAlB,EAAAA,WAAgB,WACd,GAAKW,GAAQC,EAAb,CAIAM,GAAU,GACV,IAAIC,GAAS,EACPC,EAAQ,IAAIC,MA0BlB,OAxBAD,EAAME,OAAS,WACRH,GAILD,EAAU,WAGZE,EAAMG,QAAU,WACTJ,GAILD,EAAU,UAGZE,EAAMJ,YAAcA,EACpBI,EAAMH,eAAiBA,EACvBG,EAAMT,IAAMA,EAERC,IACFQ,EAAMI,OAASZ,GAGV,WACLO,GAAS,MAEV,CAACH,EAAaC,EAAgBN,EAAKC,IAC/BG,EAwBQU,EAAUnD,EAAAA,EAAAA,GAAS,GAAImC,EAAU,CAC9CE,IAAAA,EACAC,OAAAA,KAEIc,EAASf,GAAOC,EAChBe,EAAmBD,GAAqB,UAAXX,EAE7B7C,GAAaI,EAAAA,EAAAA,GAAS,GAAIN,EAAO,CACrCK,cAAesD,EACfnB,UAAAA,EACApC,QAAAA,IAGIwD,EAzJkB,SAAA1D,GACxB,IACE0D,EAGE1D,EAHF0D,QAIIC,EAAQ,CACZ1D,KAAM,CAAC,OAFLD,EAFFE,QAEEF,EADFG,cAGwC,gBACxCqB,IAAK,CAAC,OACNK,SAAU,CAAC,aAEb,OAAO+B,EAAAA,EAAAA,GAAeD,EAAOtE,EAAuBqE,GA8IpCG,CAAkB7D,GAqBlC,OAlBEoC,EADEqB,GACsBtE,EAAAA,EAAAA,KAAKoC,GAAWnB,EAAAA,EAAAA,GAAS,CAC/C8B,IAAKA,EACLO,IAAKA,EACLC,OAAQA,EACRF,MAAOA,EACPxC,WAAYA,EACZqC,UAAWqB,EAAQlC,KAClBe,IACsB,MAAhBJ,EACEA,EACFqB,GAAUtB,EACRA,EAAI,IAES/C,EAAAA,EAAAA,KAAKwC,EAAgB,CAC3CU,UAAWqB,EAAQ7B,YAIH1C,EAAAA,EAAAA,KAAKO,GAAYU,EAAAA,EAAAA,GAAS,CAC5C0D,GAAIxB,EACJtC,WAAYA,EACZqC,WAAW0B,EAAAA,EAAAA,GAAKL,EAAQzD,KAAMoC,GAC9BL,IAAKA,GACJW,EAAO,CACRP,SAAUA,Q,iDCtKd,EAtBwB,WAAO,IAAD,EACtB4B,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOF,aACtCtE,GAASyE,EAAAA,EAAAA,MAATzE,KAaR,OATA0E,EAAAA,EAAAA,YAAU,WACRN,EAAS,CACPO,KAAMC,EAAAA,GACNC,QAAS,CAAE7E,KAAAA,OAEZ,CAACoE,EAAUpE,IAIP,CACLsE,YACE,OAACA,QAAD,IAACA,GAAAA,EAAWQ,WAAoB,OAATR,QAAS,IAATA,GAAA,UAAAA,EAAWS,YAAX,eAAiBC,QAAS,GAAKV,EAAUS,KAAK,KC6B3E,EA5CsB,WACpB,IAAMjB,EAAUmB,IACVC,EAAKC,IAAAA,KAAgBrB,GACnBQ,EAAcc,IAAdd,UACAtE,EAAsDsE,EAAtDtE,KAAMqF,EAAgDf,EAAhDe,SAAUC,EAAsChB,EAAtCgB,SAAU1D,EAA4B0C,EAA5B1C,IAAK2D,EAAuBjB,EAAvBiB,OAAQC,EAAelB,EAAfkB,WAEzCC,GAAoBC,EAAAA,EAAAA,cAAY,WACpC,OAAOF,EAAWG,KAAI,SAAAC,GACpB,OACE,SAACC,EAAA,EAAD,CAAuB3G,QAAQ,QAAQwD,UAAU,MAAjD,SACGkD,GADcA,QAKpB,CAACJ,IAEJ,OACE,UAACM,EAAA,EAAD,CAAOrD,UAAWyC,EAAGpB,EAAQpF,WAAYoF,EAAQ3E,MAAjD,WACE,UAAC2G,EAAA,EAAD,CAAOrD,UAAWyC,EAAGpB,EAAQhF,WAAYgF,EAAQ3E,MAAjD,WACE,SAAC,EAAD,CAAQmD,IAAKtC,EAAM6C,IAAKjB,EAAKa,UAAWqB,EAAQzE,UAChD,UAACyG,EAAA,EAAD,CAAOrD,UAAWqB,EAAQpF,WAA1B,WACE,UAACmH,EAAA,EAAD,CAAY3G,QAAQ,QAAQwD,UAAU,MAAtC,mBACS1C,MAET,UAAC6F,EAAA,EAAD,CAAY3G,QAAQ,QAAQwD,UAAU,MAAtC,uBACa2C,MAEb,UAACQ,EAAA,EAAD,CAAY3G,QAAQ,QAAQwD,UAAU,MAAtC,uBACa4C,MAEb,UAACO,EAAA,EAAD,CAAY3G,QAAQ,QAAQwD,UAAU,MAAtC,qBACW6C,YAIf,UAACO,EAAA,EAAD,CAAOrD,UAAWyC,EAAGpB,EAAQpF,WAAYoF,EAAQ3E,MAAjD,WACE,SAAC0G,EAAA,EAAD,CAAY3G,QAAQ,QAAQwD,UAAU,MAAtC,0BAGC8C,IAAwB,OAAVA,QAAU,IAAVA,OAAA,EAAAA,EAAYR,QAAS,GAAKS","sources":["components/pages/character/index.styles.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","hooks/useGetCharacter.js","components/pages/character/index.jsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container1: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  container2: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    '& .MuiAvatar-root': {\n      width: '240px',\n      height: '240px',\n      objectFit: 'contain',\n      display: 'grid',\n    },\n  },\n  gap8: { gap: '8px' },\n  avatar: {\n    width: '240px',\n    height: '240px',\n    objectFit: 'contain',\n  },\n}));\n\nexport default useStyles;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WATCH_CHARACTER } from '../store/actionTypes';\n\nconst useGetCharacter = () => {\n  const dispatch = useDispatch();\n  const character = useSelector(store => store?.character);\n  const { name } = useParams();\n\n  // console.log('name:', name); // not working for Jimmy+McGill\n\n  useEffect(() => {\n    dispatch({\n      type: WATCH_CHARACTER,\n      payload: { name },\n    });\n  }, [dispatch, name]);\n\n  // console.log('character: ', character);\n\n  return {\n    character:\n      !character?.isError && character?.data?.length > 0 && character.data[0],\n  };\n};\n\nexport default useGetCharacter;\n","import React, { useCallback } from 'react';\nimport useStyles from './index.styles';\nimport classNames from 'classnames/bind';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport useGetCharacter from 'hooks/useGetCharacter';\n\nconst CharacterPage = () => {\n  const classes = useStyles();\n  const cx = classNames.bind(classes);\n  const { character } = useGetCharacter();\n  const { name, nickname, birthday, img, status, occupation } = character;\n\n  const rednerOccupations = useCallback(() => {\n    return occupation.map(item => {\n      return (\n        <Typography key={item} display=\"block\" component=\"div\">\n          {item}\n        </Typography>\n      );\n    });\n  }, [occupation]);\n\n  return (\n    <Stack className={cx(classes.container1, classes.gap8)}>\n      <Stack className={cx(classes.container2, classes.gap8)}>\n        <Avatar alt={name} src={img} className={classes.avatar} />\n        <Stack className={classes.container1}>\n          <Typography display=\"block\" component=\"div\">\n            Name: {name}\n          </Typography>\n          <Typography display=\"block\" component=\"div\">\n            Nickname: {nickname}\n          </Typography>\n          <Typography display=\"block\" component=\"div\">\n            Birthday: {birthday}\n          </Typography>\n          <Typography display=\"block\" component=\"div\">\n            Status: {status}\n          </Typography>\n        </Stack>\n      </Stack>\n      <Stack className={cx(classes.container1, classes.gap8)}>\n        <Typography display=\"block\" component=\"div\">\n          Occupations:\n        </Typography>\n        {occupation && occupation?.length > 0 && rednerOccupations()}\n      </Stack>\n    </Stack>\n  );\n};\nexport default CharacterPage;\n"],"names":["makeStyles","theme","container1","flexDirection","alignItems","justifyContent","container2","width","height","objectFit","display","gap8","gap","avatar","createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","_extends","position","flexShrink","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","shape","color","palette","background","default","backgroundColor","mode","grey","AvatarImg","img","textAlign","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useThemeProps","alt","childrenProp","children","className","component","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx","dispatch","useDispatch","character","useSelector","store","useParams","useEffect","type","WATCH_CHARACTER","payload","isError","data","length","useStyles","cx","classNames","useGetCharacter","nickname","birthday","status","occupation","rednerOccupations","useCallback","map","item","Typography","Stack"],"sourceRoot":""}