{"version":3,"file":"static/js/426.ac3cbbe9.chunk.js","mappings":"4JAQA,GANkBA,E,QAAAA,IAAW,SAAAC,GAAK,MAAK,CACrCC,aAAc,O,uCCkChB,EAjCuB,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOF,aAE7CG,EAAAA,EAAAA,YAAU,WACRL,EAAS,CAAEM,KAAMC,EAAAA,OAChB,CAACP,IAEJ,IAAMQ,GAAkBC,EAAAA,EAAAA,cAAY,WAClC,IAAMC,EAAU,GACR,OAARR,QAAQ,IAARA,GAAAA,EAAUS,KAAKC,SAAQ,SAAAC,GAEhBH,EAAQI,SAASD,EAAKE,OAAOC,SAChCN,EAAQO,KAAKJ,EAAKE,WAItB,IAAMG,EAAS,GAOf,OANAR,EAAQE,SAAQ,SAAAG,GACd,IAAMI,EAAQ,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAAUS,KAAKS,QAAO,SAAAP,GAAI,OAAIA,EAAKE,SAAWA,KAC/DG,EAAOD,KAAKE,MAIPD,IACN,CAAChB,IAEJ,MAAO,CACLA,WACE,OAACA,QAAD,IAACA,GAAAA,EAAUmB,WAAmB,OAARnB,QAAQ,IAARA,OAAA,EAAAA,EAAUS,KAAKW,QAAS,GAAKd,M,mBCnBzD,EAXyB,SAAC,GAAsC,IAApCe,EAAmC,EAAnCA,GAAmC,IAA/BC,MAAAA,OAA+B,MAAvB,GAAuB,MAAnBC,QAAAA,OAAmB,MAAT,GAAS,EACvDC,EAAY,mBAAeH,GACjC,OACE,0BACE,4BACE,SAAC,KAAD,CAAMI,GAAID,EAAV,SAAyBF,IAD3B,SAESC,QCqCf,EAxCoB,WAClB,IAAMG,EAAUC,IAER3B,GADG4B,IAAAA,KAAgBF,GACNG,IAAb7B,UAGF8B,GAAiBvB,EAAAA,EAAAA,cAAY,SAAAE,GACjC,OAAOA,EAAKsB,KAAI,SAAApB,GACd,IAAQqB,EAAgCrB,EAAhCqB,WAAYV,EAAoBX,EAApBW,MAAOW,EAAatB,EAAbsB,SAC3B,OACE,SAAC,EAAD,CAEEZ,GAAIW,EACJV,MAAOA,EACPC,QAASU,GAHJX,QAOV,IAEGY,GAAgB3B,EAAAA,EAAAA,cAAY,WAChC,cAAOP,QAAP,IAAOA,OAAP,EAAOA,EAAU+B,KAAI,SAAClB,EAAQsB,GAC5B,IAAMC,EAAG,iBAAaD,GACtB,OACE,4BACE,sCAAcA,EAAM,KACnBL,EAAejB,KAFRuB,QAMb,CAACpC,EAAU8B,IAEd,OACE,4BACE,2CACA,yBAAM9B,IAAoB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,QAAS,GAAKc","sources":["components/pages/main/index.styles.js","hooks/useGetEpisodes.js","components/episodesListItem/index.jsx","components/pages/main/index.jsx"],"sourcesContent":["import { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  wrapperClass: {\n    // styles goes here\n  },\n}));\n\nexport default useStyles;\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { WATCH_EPISODES } from '../store/actionTypes';\n\nconst useGetEpisodes = () => {\n  const dispatch = useDispatch();\n  const episodes = useSelector(store => store?.episodes);\n\n  useEffect(() => {\n    dispatch({ type: WATCH_EPISODES });\n  }, [dispatch]);\n\n  const season1Episodes = useCallback(() => {\n    const seasons = [];\n    episodes?.data.forEach(item => {\n      // bug in API type of season by docs is number, but in a fact it is string!\n      if (!seasons.includes(item.season.trim())) {\n        seasons.push(item.season);\n      }\n    });\n\n    const result = [];\n    seasons.forEach(season => {\n      const filtered = episodes?.data.filter(item => item.season === season);\n      result.push(filtered);\n    });\n\n    // console.log('result: ', result);\n    return result;\n  }, [episodes]);\n\n  return {\n    episodes:\n      !episodes?.isError && episodes?.data.length > 0 && season1Episodes(),\n  };\n};\n\nexport default useGetEpisodes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst EpisodesListItem = ({ id, title = '', airDate = '' }) => {\n  const redirectPath = `/episode/${id}`;\n  return (\n    <div>\n      <div>\n        <Link to={redirectPath}>{title}</Link>\n        Date: {airDate}\n      </div>\n    </div>\n  );\n};\nexport default EpisodesListItem;\n","import React, { useCallback } from 'react';\nimport useStyles from './index.styles';\nimport classNames from 'classnames/bind';\nimport useGetEpisodes from '../../../hooks/useGetEpisodes';\nimport EpisodesListItem from '../../episodesListItem';\n\nconst LandingPage = () => {\n  const classes = useStyles();\n  const cx = classNames.bind(classes);\n  const { episodes } = useGetEpisodes();\n  // console.log('episodes: ', episodes);\n\n  const renderEpisodes = useCallback(data => {\n    return data.map(item => {\n      const { episode_id, title, air_date } = item;\n      return (\n        <EpisodesListItem\n          key={title}\n          id={episode_id}\n          title={title}\n          airDate={air_date}\n        />\n      );\n    });\n  }, []);\n\n  const renderSeasons = useCallback(() => {\n    return episodes?.map((season, idx) => {\n      const key = `season-${idx}`;\n      return (\n        <div key={key}>\n          <div>Season: {idx + 1}</div>\n          {renderEpisodes(season)}\n        </div>\n      );\n    });\n  }, [episodes, renderEpisodes]);\n\n  return (\n    <div>\n      <div>landing page</div>\n      <div>{episodes && episodes?.length > 0 && renderSeasons()}</div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n"],"names":["makeStyles","theme","wrapperClass","dispatch","useDispatch","episodes","useSelector","store","useEffect","type","WATCH_EPISODES","season1Episodes","useCallback","seasons","data","forEach","item","includes","season","trim","push","result","filtered","filter","isError","length","id","title","airDate","redirectPath","to","classes","useStyles","classNames","useGetEpisodes","renderEpisodes","map","episode_id","air_date","renderSeasons","idx","key"],"sourceRoot":""}